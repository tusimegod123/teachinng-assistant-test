{"ast":null,"code":"var _jsxFileName = \"/Users/tusimegodwin/Documents/clinic-front-end/src/components/ViewPatient.js\";\nimport React from \"react\";\nimport NavBar from \"./NavBar\";\nimport PatientService from \"../services/PatientServices\";\nimport { Row, Container, Col, Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ViewPateient extends React.Component {\n  // const [show, setShow] = useState(false);\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      setShow: false,\n      patients: []\n    };\n  }\n\n  handleClose() {\n    this.setState({\n      setShow: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  componentDidMount() {\n    PatientService.getPatients().then(response => {\n      this.setState({\n        patients: response.data.map(patient => {\n          return { ...patient,\n            outPatient: patient.anOutPatient === true ? \"Yes\" : \"No\"\n          };\n        })\n      }); // const bool = response.data.anOutPatient;\n      // const str = bool === true ? \"Yes\" : \"No\";\n      // response.data.anOutPatient = str;\n      // // const bool = true;\n      // console.log(str);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-center\",\n              children: \"List Of All Registered Patients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/register\",\n              className: \"btn btn-primary\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"Register Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-striped\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"#\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Patient Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Patient Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Patient Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Patient Phone Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Patient Date of Birth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Out patient?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.state.patients.map(patient => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.patientId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.patientNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.fullNames\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.emailAddress\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.contactPhoneNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.dateOfBirth\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: patient.outPatient\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 23\n                  }, this)]\n                }, patient.patientId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ViewPateient;","map":{"version":3,"sources":["/Users/tusimegodwin/Documents/clinic-front-end/src/components/ViewPatient.js"],"names":["React","NavBar","PatientService","Row","Container","Col","Modal","Button","ViewPateient","Component","constructor","props","state","show","setShow","patients","handleClose","setState","handleShow","componentDidMount","getPatients","then","response","data","map","patient","outPatient","anOutPatient","render","patientId","patientNumber","fullNames","emailAddress","contactPhoneNumber","dateOfBirth"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NavBar from \"./NavBar\";\n\nimport PatientService from \"../services/PatientServices\";\nimport { Row, Container, Col, Modal, Button } from \"react-bootstrap\";\n\nclass ViewPateient extends React.Component {\n  // const [show, setShow] = useState(false);\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      setShow: false,\n      patients: [],\n    };\n  }\n  handleClose() {\n    this.setState({ setShow: false });\n  }\n  handleShow() {\n    this.setState({ show: true });\n  }\n  componentDidMount() {\n    PatientService.getPatients().then((response) => {\n      this.setState({\n        patients: response.data.map((patient) => {\n          return {\n            ...patient,\n            outPatient: patient.anOutPatient === true ? \"Yes\" : \"No\",\n          };\n        }),\n      });\n\n      // const bool = response.data.anOutPatient;\n      // const str = bool === true ? \"Yes\" : \"No\";\n      // response.data.anOutPatient = str;\n      // // const bool = true;\n      // console.log(str);\n    });\n  }\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <br></br>\n        <Container>\n          <Row>\n            <Col>\n              <h2 className=\"text-center\">List Of All Registered Patients</h2>\n            </Col>\n            <Col>\n              <a\n                href=\"http://localhost:3000/register\"\n                className=\"btn btn-primary\"\n              >\n                <Button>Register Patient</Button>\n              </a>\n            </Col>\n          </Row>\n        </Container>\n        <br></br>\n        <Container>\n          <Row>\n            <Col>\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <td>#</td>\n                    <td>Patient Number</td>\n                    <td>Patient Name</td>\n                    <td>Patient Email</td>\n                    <td>Patient Phone Number</td>\n                    <td>Patient Date of Birth</td>\n                    <td>Out patient?</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.patients.map((patient) => (\n                    <tr key={patient.patientId}>\n                      <td>{patient.patientId}</td>\n                      <td>{patient.patientNumber}</td>\n                      <td>{patient.fullNames}</td>\n                      <td>{patient.emailAddress}</td>\n                      <td>{patient.contactPhoneNumber}</td>\n                      <td>{patient.dateOfBirth}</td>\n                      <td>{patient.outPatient}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default ViewPateient;\n"]},"metadata":{},"sourceType":"module"}